package com.wyw.jiangsu.db.local;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.wyw.jiangsu.db.User;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "USER".
*/
public class UserDao extends AbstractDao<User, Long> {

    public static final String TABLENAME = "USER";

    /**
     * Properties of entity User.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property USERID = new Property(0, long.class, "USERID", true, "_id");
        public final static Property FSGUIDID = new Property(1, String.class, "FSGUIDID", false, "FSGUIDID");
        public final static Property FSCTIME = new Property(2, String.class, "FSCTIME", false, "FSCTIME");
        public final static Property FSUTIME = new Property(3, String.class, "FSUTIME", false, "FSUTIME");
        public final static Property FSUSERID = new Property(4, int.class, "FSUSERID", false, "FSUSERID");
        public final static Property FSUSERNAME = new Property(5, String.class, "FSUSERNAME", false, "FSUSERNAME");
        public final static Property FSUNITID = new Property(6, int.class, "FSUNITID", false, "FSUNITID");
        public final static Property FSUNITUSTRID = new Property(7, String.class, "FSUNITUSTRID", false, "FSUNITUSTRID");
        public final static Property FSUNITNAME = new Property(8, String.class, "FSUNITNAME", false, "FSUNITNAME");
        public final static Property FSENTERPRISEID = new Property(9, int.class, "FSENTERPRISEID", false, "FSENTERPRISEID");
        public final static Property FSENTERPRISENAME = new Property(10, String.class, "FSENTERPRISENAME", false, "FSENTERPRISENAME");
        public final static Property FSAUDIT = new Property(11, String.class, "FSAUDIT", false, "FSAUDIT");
        public final static Property FSREVIEWER = new Property(12, String.class, "FSREVIEWER", false, "FSREVIEWER");
        public final static Property FSMEMO1 = new Property(13, String.class, "FSMEMO1", false, "FSMEMO1");
        public final static Property FSMEMO2 = new Property(14, String.class, "FSMEMO2", false, "FSMEMO2");
        public final static Property FSMEMO3 = new Property(15, String.class, "FSMEMO3", false, "FSMEMO3");
        public final static Property FUQUANXIAN = new Property(16, String.class, "FUQUANXIAN", false, "FUQUANXIAN");
        public final static Property FUACCOUNT = new Property(17, String.class, "FUACCOUNT", false, "FUACCOUNT");
        public final static Property FUPASSWORD = new Property(18, String.class, "FUPASSWORD", false, "FUPASSWORD");
        public final static Property FRID = new Property(19, String.class, "FRID", false, "FRID");
        public final static Property FRNAME = new Property(20, String.class, "FRNAME", false, "FRNAME");
        public final static Property FUSEEID = new Property(21, int.class, "FUSEEID", false, "FUSEEID");
        public final static Property FUSEENAME = new Property(22, String.class, "FUSEENAME", false, "FUSEENAME");
        public final static Property FUNAME = new Property(23, String.class, "FUNAME", false, "FUNAME");
        public final static Property FUSEX = new Property(24, boolean.class, "FUSEX", false, "FUSEX");
        public final static Property FUPOSITION = new Property(25, String.class, "FUPOSITION", false, "FUPOSITION");
        public final static Property FUPHONE = new Property(26, String.class, "FUPHONE", false, "FUPHONE");
        public final static Property FUEMAIL = new Property(27, String.class, "FUEMAIL", false, "FUEMAIL");
        public final static Property FUQQ = new Property(28, String.class, "FUQQ", false, "FUQQ");
        public final static Property FUCODE = new Property(29, int.class, "FUCODE", false, "FUCODE");
        public final static Property FUNUMBER = new Property(30, String.class, "FUNUMBER", false, "FUNUMBER");
        public final static Property FUPOSTCODE = new Property(31, String.class, "FUPOSTCODE", false, "FUPOSTCODE");
        public final static Property FUREMARK = new Property(32, String.class, "FUREMARK", false, "FUREMARK");
        public final static Property FUDWTYPE = new Property(33, String.class, "FUDWTYPE", false, "FUDWTYPE");
        public final static Property FSDEL = new Property(34, String.class, "FSDEL", false, "FSDEL");
        public final static Property FULOGOFF = new Property(35, String.class, "FULOGOFF", false, "FULOGOFF");
        public final static Property FSM1 = new Property(36, String.class, "FSM1", false, "FSM1");
        public final static Property FSM2 = new Property(37, String.class, "FSM2", false, "FSM2");
        public final static Property FSM3 = new Property(38, String.class, "FSM3", false, "FSM3");
        public final static Property FSM4 = new Property(39, String.class, "FSM4", false, "FSM4");
        public final static Property FSM5 = new Property(40, String.class, "FSM5", false, "FSM5");
        public final static Property SFRID = new Property(41, String.class, "SFRID", false, "SFRID");
        public final static Property SFRNAME = new Property(42, String.class, "SFRNAME", false, "SFRNAME");
        public final static Property CODE = new Property(43, String.class, "CODE", false, "CODE");
        public final static Property ZT = new Property(44, int.class, "ZT", false, "ZT");
    }


    public UserDao(DaoConfig config) {
        super(config);
    }
    
    public UserDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"USER\" (" + //
                "\"_id\" INTEGER PRIMARY KEY NOT NULL ," + // 0: USERID
                "\"FSGUIDID\" TEXT," + // 1: FSGUIDID
                "\"FSCTIME\" TEXT," + // 2: FSCTIME
                "\"FSUTIME\" TEXT," + // 3: FSUTIME
                "\"FSUSERID\" INTEGER NOT NULL ," + // 4: FSUSERID
                "\"FSUSERNAME\" TEXT," + // 5: FSUSERNAME
                "\"FSUNITID\" INTEGER NOT NULL ," + // 6: FSUNITID
                "\"FSUNITUSTRID\" TEXT," + // 7: FSUNITUSTRID
                "\"FSUNITNAME\" TEXT," + // 8: FSUNITNAME
                "\"FSENTERPRISEID\" INTEGER NOT NULL ," + // 9: FSENTERPRISEID
                "\"FSENTERPRISENAME\" TEXT," + // 10: FSENTERPRISENAME
                "\"FSAUDIT\" TEXT," + // 11: FSAUDIT
                "\"FSREVIEWER\" TEXT," + // 12: FSREVIEWER
                "\"FSMEMO1\" TEXT," + // 13: FSMEMO1
                "\"FSMEMO2\" TEXT," + // 14: FSMEMO2
                "\"FSMEMO3\" TEXT," + // 15: FSMEMO3
                "\"FUQUANXIAN\" TEXT," + // 16: FUQUANXIAN
                "\"FUACCOUNT\" TEXT," + // 17: FUACCOUNT
                "\"FUPASSWORD\" TEXT," + // 18: FUPASSWORD
                "\"FRID\" TEXT," + // 19: FRID
                "\"FRNAME\" TEXT," + // 20: FRNAME
                "\"FUSEEID\" INTEGER NOT NULL ," + // 21: FUSEEID
                "\"FUSEENAME\" TEXT," + // 22: FUSEENAME
                "\"FUNAME\" TEXT," + // 23: FUNAME
                "\"FUSEX\" INTEGER NOT NULL ," + // 24: FUSEX
                "\"FUPOSITION\" TEXT," + // 25: FUPOSITION
                "\"FUPHONE\" TEXT," + // 26: FUPHONE
                "\"FUEMAIL\" TEXT," + // 27: FUEMAIL
                "\"FUQQ\" TEXT," + // 28: FUQQ
                "\"FUCODE\" INTEGER NOT NULL ," + // 29: FUCODE
                "\"FUNUMBER\" TEXT," + // 30: FUNUMBER
                "\"FUPOSTCODE\" TEXT," + // 31: FUPOSTCODE
                "\"FUREMARK\" TEXT," + // 32: FUREMARK
                "\"FUDWTYPE\" TEXT," + // 33: FUDWTYPE
                "\"FSDEL\" TEXT," + // 34: FSDEL
                "\"FULOGOFF\" TEXT," + // 35: FULOGOFF
                "\"FSM1\" TEXT," + // 36: FSM1
                "\"FSM2\" TEXT," + // 37: FSM2
                "\"FSM3\" TEXT," + // 38: FSM3
                "\"FSM4\" TEXT," + // 39: FSM4
                "\"FSM5\" TEXT," + // 40: FSM5
                "\"SFRID\" TEXT," + // 41: SFRID
                "\"SFRNAME\" TEXT," + // 42: SFRNAME
                "\"CODE\" TEXT," + // 43: CODE
                "\"ZT\" INTEGER NOT NULL );"); // 44: ZT
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"USER\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, User entity) {
        stmt.clearBindings();
        stmt.bindLong(1, entity.getUSERID());
 
        String FSGUIDID = entity.getFSGUIDID();
        if (FSGUIDID != null) {
            stmt.bindString(2, FSGUIDID);
        }
 
        String FSCTIME = entity.getFSCTIME();
        if (FSCTIME != null) {
            stmt.bindString(3, FSCTIME);
        }
 
        String FSUTIME = entity.getFSUTIME();
        if (FSUTIME != null) {
            stmt.bindString(4, FSUTIME);
        }
        stmt.bindLong(5, entity.getFSUSERID());
 
        String FSUSERNAME = entity.getFSUSERNAME();
        if (FSUSERNAME != null) {
            stmt.bindString(6, FSUSERNAME);
        }
        stmt.bindLong(7, entity.getFSUNITID());
 
        String FSUNITUSTRID = entity.getFSUNITUSTRID();
        if (FSUNITUSTRID != null) {
            stmt.bindString(8, FSUNITUSTRID);
        }
 
        String FSUNITNAME = entity.getFSUNITNAME();
        if (FSUNITNAME != null) {
            stmt.bindString(9, FSUNITNAME);
        }
        stmt.bindLong(10, entity.getFSENTERPRISEID());
 
        String FSENTERPRISENAME = entity.getFSENTERPRISENAME();
        if (FSENTERPRISENAME != null) {
            stmt.bindString(11, FSENTERPRISENAME);
        }
 
        String FSAUDIT = entity.getFSAUDIT();
        if (FSAUDIT != null) {
            stmt.bindString(12, FSAUDIT);
        }
 
        String FSREVIEWER = entity.getFSREVIEWER();
        if (FSREVIEWER != null) {
            stmt.bindString(13, FSREVIEWER);
        }
 
        String FSMEMO1 = entity.getFSMEMO1();
        if (FSMEMO1 != null) {
            stmt.bindString(14, FSMEMO1);
        }
 
        String FSMEMO2 = entity.getFSMEMO2();
        if (FSMEMO2 != null) {
            stmt.bindString(15, FSMEMO2);
        }
 
        String FSMEMO3 = entity.getFSMEMO3();
        if (FSMEMO3 != null) {
            stmt.bindString(16, FSMEMO3);
        }
 
        String FUQUANXIAN = entity.getFUQUANXIAN();
        if (FUQUANXIAN != null) {
            stmt.bindString(17, FUQUANXIAN);
        }
 
        String FUACCOUNT = entity.getFUACCOUNT();
        if (FUACCOUNT != null) {
            stmt.bindString(18, FUACCOUNT);
        }
 
        String FUPASSWORD = entity.getFUPASSWORD();
        if (FUPASSWORD != null) {
            stmt.bindString(19, FUPASSWORD);
        }
 
        String FRID = entity.getFRID();
        if (FRID != null) {
            stmt.bindString(20, FRID);
        }
 
        String FRNAME = entity.getFRNAME();
        if (FRNAME != null) {
            stmt.bindString(21, FRNAME);
        }
        stmt.bindLong(22, entity.getFUSEEID());
 
        String FUSEENAME = entity.getFUSEENAME();
        if (FUSEENAME != null) {
            stmt.bindString(23, FUSEENAME);
        }
 
        String FUNAME = entity.getFUNAME();
        if (FUNAME != null) {
            stmt.bindString(24, FUNAME);
        }
        stmt.bindLong(25, entity.getFUSEX() ? 1L: 0L);
 
        String FUPOSITION = entity.getFUPOSITION();
        if (FUPOSITION != null) {
            stmt.bindString(26, FUPOSITION);
        }
 
        String FUPHONE = entity.getFUPHONE();
        if (FUPHONE != null) {
            stmt.bindString(27, FUPHONE);
        }
 
        String FUEMAIL = entity.getFUEMAIL();
        if (FUEMAIL != null) {
            stmt.bindString(28, FUEMAIL);
        }
 
        String FUQQ = entity.getFUQQ();
        if (FUQQ != null) {
            stmt.bindString(29, FUQQ);
        }
        stmt.bindLong(30, entity.getFUCODE());
 
        String FUNUMBER = entity.getFUNUMBER();
        if (FUNUMBER != null) {
            stmt.bindString(31, FUNUMBER);
        }
 
        String FUPOSTCODE = entity.getFUPOSTCODE();
        if (FUPOSTCODE != null) {
            stmt.bindString(32, FUPOSTCODE);
        }
 
        String FUREMARK = entity.getFUREMARK();
        if (FUREMARK != null) {
            stmt.bindString(33, FUREMARK);
        }
 
        String FUDWTYPE = entity.getFUDWTYPE();
        if (FUDWTYPE != null) {
            stmt.bindString(34, FUDWTYPE);
        }
 
        String FSDEL = entity.getFSDEL();
        if (FSDEL != null) {
            stmt.bindString(35, FSDEL);
        }
 
        String FULOGOFF = entity.getFULOGOFF();
        if (FULOGOFF != null) {
            stmt.bindString(36, FULOGOFF);
        }
 
        String FSM1 = entity.getFSM1();
        if (FSM1 != null) {
            stmt.bindString(37, FSM1);
        }
 
        String FSM2 = entity.getFSM2();
        if (FSM2 != null) {
            stmt.bindString(38, FSM2);
        }
 
        String FSM3 = entity.getFSM3();
        if (FSM3 != null) {
            stmt.bindString(39, FSM3);
        }
 
        String FSM4 = entity.getFSM4();
        if (FSM4 != null) {
            stmt.bindString(40, FSM4);
        }
 
        String FSM5 = entity.getFSM5();
        if (FSM5 != null) {
            stmt.bindString(41, FSM5);
        }
 
        String SFRID = entity.getSFRID();
        if (SFRID != null) {
            stmt.bindString(42, SFRID);
        }
 
        String SFRNAME = entity.getSFRNAME();
        if (SFRNAME != null) {
            stmt.bindString(43, SFRNAME);
        }
 
        String CODE = entity.getCODE();
        if (CODE != null) {
            stmt.bindString(44, CODE);
        }
        stmt.bindLong(45, entity.getZT());
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, User entity) {
        stmt.clearBindings();
        stmt.bindLong(1, entity.getUSERID());
 
        String FSGUIDID = entity.getFSGUIDID();
        if (FSGUIDID != null) {
            stmt.bindString(2, FSGUIDID);
        }
 
        String FSCTIME = entity.getFSCTIME();
        if (FSCTIME != null) {
            stmt.bindString(3, FSCTIME);
        }
 
        String FSUTIME = entity.getFSUTIME();
        if (FSUTIME != null) {
            stmt.bindString(4, FSUTIME);
        }
        stmt.bindLong(5, entity.getFSUSERID());
 
        String FSUSERNAME = entity.getFSUSERNAME();
        if (FSUSERNAME != null) {
            stmt.bindString(6, FSUSERNAME);
        }
        stmt.bindLong(7, entity.getFSUNITID());
 
        String FSUNITUSTRID = entity.getFSUNITUSTRID();
        if (FSUNITUSTRID != null) {
            stmt.bindString(8, FSUNITUSTRID);
        }
 
        String FSUNITNAME = entity.getFSUNITNAME();
        if (FSUNITNAME != null) {
            stmt.bindString(9, FSUNITNAME);
        }
        stmt.bindLong(10, entity.getFSENTERPRISEID());
 
        String FSENTERPRISENAME = entity.getFSENTERPRISENAME();
        if (FSENTERPRISENAME != null) {
            stmt.bindString(11, FSENTERPRISENAME);
        }
 
        String FSAUDIT = entity.getFSAUDIT();
        if (FSAUDIT != null) {
            stmt.bindString(12, FSAUDIT);
        }
 
        String FSREVIEWER = entity.getFSREVIEWER();
        if (FSREVIEWER != null) {
            stmt.bindString(13, FSREVIEWER);
        }
 
        String FSMEMO1 = entity.getFSMEMO1();
        if (FSMEMO1 != null) {
            stmt.bindString(14, FSMEMO1);
        }
 
        String FSMEMO2 = entity.getFSMEMO2();
        if (FSMEMO2 != null) {
            stmt.bindString(15, FSMEMO2);
        }
 
        String FSMEMO3 = entity.getFSMEMO3();
        if (FSMEMO3 != null) {
            stmt.bindString(16, FSMEMO3);
        }
 
        String FUQUANXIAN = entity.getFUQUANXIAN();
        if (FUQUANXIAN != null) {
            stmt.bindString(17, FUQUANXIAN);
        }
 
        String FUACCOUNT = entity.getFUACCOUNT();
        if (FUACCOUNT != null) {
            stmt.bindString(18, FUACCOUNT);
        }
 
        String FUPASSWORD = entity.getFUPASSWORD();
        if (FUPASSWORD != null) {
            stmt.bindString(19, FUPASSWORD);
        }
 
        String FRID = entity.getFRID();
        if (FRID != null) {
            stmt.bindString(20, FRID);
        }
 
        String FRNAME = entity.getFRNAME();
        if (FRNAME != null) {
            stmt.bindString(21, FRNAME);
        }
        stmt.bindLong(22, entity.getFUSEEID());
 
        String FUSEENAME = entity.getFUSEENAME();
        if (FUSEENAME != null) {
            stmt.bindString(23, FUSEENAME);
        }
 
        String FUNAME = entity.getFUNAME();
        if (FUNAME != null) {
            stmt.bindString(24, FUNAME);
        }
        stmt.bindLong(25, entity.getFUSEX() ? 1L: 0L);
 
        String FUPOSITION = entity.getFUPOSITION();
        if (FUPOSITION != null) {
            stmt.bindString(26, FUPOSITION);
        }
 
        String FUPHONE = entity.getFUPHONE();
        if (FUPHONE != null) {
            stmt.bindString(27, FUPHONE);
        }
 
        String FUEMAIL = entity.getFUEMAIL();
        if (FUEMAIL != null) {
            stmt.bindString(28, FUEMAIL);
        }
 
        String FUQQ = entity.getFUQQ();
        if (FUQQ != null) {
            stmt.bindString(29, FUQQ);
        }
        stmt.bindLong(30, entity.getFUCODE());
 
        String FUNUMBER = entity.getFUNUMBER();
        if (FUNUMBER != null) {
            stmt.bindString(31, FUNUMBER);
        }
 
        String FUPOSTCODE = entity.getFUPOSTCODE();
        if (FUPOSTCODE != null) {
            stmt.bindString(32, FUPOSTCODE);
        }
 
        String FUREMARK = entity.getFUREMARK();
        if (FUREMARK != null) {
            stmt.bindString(33, FUREMARK);
        }
 
        String FUDWTYPE = entity.getFUDWTYPE();
        if (FUDWTYPE != null) {
            stmt.bindString(34, FUDWTYPE);
        }
 
        String FSDEL = entity.getFSDEL();
        if (FSDEL != null) {
            stmt.bindString(35, FSDEL);
        }
 
        String FULOGOFF = entity.getFULOGOFF();
        if (FULOGOFF != null) {
            stmt.bindString(36, FULOGOFF);
        }
 
        String FSM1 = entity.getFSM1();
        if (FSM1 != null) {
            stmt.bindString(37, FSM1);
        }
 
        String FSM2 = entity.getFSM2();
        if (FSM2 != null) {
            stmt.bindString(38, FSM2);
        }
 
        String FSM3 = entity.getFSM3();
        if (FSM3 != null) {
            stmt.bindString(39, FSM3);
        }
 
        String FSM4 = entity.getFSM4();
        if (FSM4 != null) {
            stmt.bindString(40, FSM4);
        }
 
        String FSM5 = entity.getFSM5();
        if (FSM5 != null) {
            stmt.bindString(41, FSM5);
        }
 
        String SFRID = entity.getSFRID();
        if (SFRID != null) {
            stmt.bindString(42, SFRID);
        }
 
        String SFRNAME = entity.getSFRNAME();
        if (SFRNAME != null) {
            stmt.bindString(43, SFRNAME);
        }
 
        String CODE = entity.getCODE();
        if (CODE != null) {
            stmt.bindString(44, CODE);
        }
        stmt.bindLong(45, entity.getZT());
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.getLong(offset + 0);
    }    

    @Override
    public User readEntity(Cursor cursor, int offset) {
        User entity = new User( //
            cursor.getLong(offset + 0), // USERID
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // FSGUIDID
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // FSCTIME
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // FSUTIME
            cursor.getInt(offset + 4), // FSUSERID
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // FSUSERNAME
            cursor.getInt(offset + 6), // FSUNITID
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // FSUNITUSTRID
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // FSUNITNAME
            cursor.getInt(offset + 9), // FSENTERPRISEID
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // FSENTERPRISENAME
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // FSAUDIT
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // FSREVIEWER
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // FSMEMO1
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // FSMEMO2
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // FSMEMO3
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // FUQUANXIAN
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // FUACCOUNT
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // FUPASSWORD
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // FRID
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // FRNAME
            cursor.getInt(offset + 21), // FUSEEID
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // FUSEENAME
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // FUNAME
            cursor.getShort(offset + 24) != 0, // FUSEX
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // FUPOSITION
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // FUPHONE
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // FUEMAIL
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // FUQQ
            cursor.getInt(offset + 29), // FUCODE
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // FUNUMBER
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // FUPOSTCODE
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // FUREMARK
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // FUDWTYPE
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // FSDEL
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // FULOGOFF
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // FSM1
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // FSM2
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // FSM3
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // FSM4
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // FSM5
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // SFRID
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // SFRNAME
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // CODE
            cursor.getInt(offset + 44) // ZT
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, User entity, int offset) {
        entity.setUSERID(cursor.getLong(offset + 0));
        entity.setFSGUIDID(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setFSCTIME(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setFSUTIME(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setFSUSERID(cursor.getInt(offset + 4));
        entity.setFSUSERNAME(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setFSUNITID(cursor.getInt(offset + 6));
        entity.setFSUNITUSTRID(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setFSUNITNAME(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setFSENTERPRISEID(cursor.getInt(offset + 9));
        entity.setFSENTERPRISENAME(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setFSAUDIT(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setFSREVIEWER(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setFSMEMO1(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setFSMEMO2(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setFSMEMO3(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setFUQUANXIAN(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setFUACCOUNT(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setFUPASSWORD(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setFRID(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setFRNAME(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setFUSEEID(cursor.getInt(offset + 21));
        entity.setFUSEENAME(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setFUNAME(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setFUSEX(cursor.getShort(offset + 24) != 0);
        entity.setFUPOSITION(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setFUPHONE(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setFUEMAIL(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setFUQQ(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setFUCODE(cursor.getInt(offset + 29));
        entity.setFUNUMBER(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setFUPOSTCODE(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setFUREMARK(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setFUDWTYPE(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setFSDEL(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setFULOGOFF(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setFSM1(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setFSM2(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setFSM3(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setFSM4(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setFSM5(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setSFRID(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setSFRNAME(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setCODE(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setZT(cursor.getInt(offset + 44));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(User entity, long rowId) {
        entity.setUSERID(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(User entity) {
        if(entity != null) {
            return entity.getUSERID();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(User entity) {
        throw new UnsupportedOperationException("Unsupported for entities with a non-null key");
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
